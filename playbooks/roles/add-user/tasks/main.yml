---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://openedx.atlassian.net/wiki/display/OpenOPS
# code style: https://openedx.atlassian.net/wiki/display/OpenOPS/Ansible+Code+Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
#
#
# Tasks for role add-user
#
# Overview:
#
# This role performs the repetive tasks that most edX roles
# require in our default configuration.
#
# Example play:
#
# Rather than being included in the play, this role
# is included as a dependency by other roles in the meta/main.yml
# file.  The including role should add the following
# depency definition.
#
# dependencies:
#   - role: add-user
#     user_name: edx-themes
#     user_home: /edx/etc/edx-themes
#     group_name: edx-themes
#     dirs:
#       - {path: /edx/var/edx-themes, owner: 'edx-themes', group: "edx-themes"}
#       - {path: /edx/etc/edx-themes, owner: 'edx-themes', group: "edx-themes"}
#       - ...
#
# Generating an ssh key so users can do a git
# clone over ssh for public repositories without any
# additional configuration
- name: create application user
  user: >
    name="{{ user_name }}"
    home="{{ user_home }}"
    createhome=yes
    shell=/bin/false
    generate_ssh_key=yes
  tags:
    - install
    - install:base

# Assumes that the home directory has been created above.
# In some cases(vagrant boxes) the home directory gets created
# but does not have the corrent owner and group. In vagrant for
# example we were seeing it defaulting it to `root` for both.
# Here we ensure that the ownership
# of the home directory is always correct before proceeding.
- name: ensure the ownership of home directory
  file: >
    path="{{ user_home }}"
    state=directory
    owner="{{ user_name }}"
    group="{{ group_name }}"
  tags:
    - install
    - install:base

- name: create required dirs for the user
  file: >
    path="{{ item.path }}"
    state=directory
    owner={{ item.owner }}
    group={{ item.group }}
    mode=0755
  with_items: dirs
  when: dirs is defined
  tags:
    - install
    - install:base
